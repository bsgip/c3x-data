##################################################################################################
#
#               Batching
#
##################################################################################################

[Batches]
# Batching helps to reduce the memory used to clean the data. The amount of files read by the software can vary based
# on RAM available.
# number of batches is based on the amount of files processed in a batch. this makes it possible to process a certain
# amount of data at a time
number_of_batches = 26

# The files in a batch depend on the size of the file and RAM available
files_per_batch = 1000

# the concat parameters can be used to only process certain batches.
# Statistic may show which batches hold relevant data
concat_batches_start = 0
concat_batches_end = 25

##################################################################################################
#
#               Data Path
#
##################################################################################################

[Data Path]
# Paths where files should be stored. If not given a path a folder will be
# generate in a default location called "data" (except for the source)
source = /home/meike/raw_next_gen_data/
batteries = /home/meike/data/batteries
solar = /home/meike/data/solar
node = /home/meike/data/node
loads = /home/meike/data/loads
results = /home/meike/data/results

##################################################################################################
#
#               Data usage
#
##################################################################################################

[Data Usage]
# determines which data is processed
batteries = True
solar = True
node = False
loads = True

##################################################################################################
#
#               Time filtering
#
##################################################################################################

[Time Filter]
# the user may choose to only access a certain time
# time_filter_use = True/False]
time_filter_use = True

# defines a Start and an end of a time range that the user would like to use
start_time = 2019-1-23 00:00
end_time = 2019-1-23 23:55

##################################################################################################
#
#               Indicates how sign corrections are handled
#
##################################################################################################

[Sign Correction]
# Loads and Solar can be filtered by sign to find wrong data. This data can be removed
# wrong_sign_removal [True/False]
wrong_sign_removal = True

# The user may choose to remove more data then the actual faulty data point, or to replace the data
# data_replacement = [drop/nan/zero/remove]
data_replacement = nan

# If more then the actual fault is removed the user can choose, how much data is removed
# removal_time_frame = [day/hour/all]
removal_time_frame = day

# If more then the actual fault is removed, the fault can be place in the middle, at the end or
# at the start of the data
# fault_placement = [start/middle/end]
fault_placement = start

##################################################################################################
#
#               Indicates how duplicates are handled
#
##################################################################################################

[Duplicate Removal]
# the user my choose to remove duplicated timestamps
duplicate_removal = True

# the user may choose how he would like to handle the duplicated data. none will remove all
# duplicate timestamps and remove can be used to remove more data then the actual duplicate
# data_replacement = first/last/none/average/max/remove
data_replacement = none

# If more then the actual fault is removed the user can choose, how much data is removed
# removal_time_frame = [day/hour/all]
removal_time_frame = day

# If more then the actual fault is removed, the fault can be place in the middle, at the end or
# at the start of the data
# fault_placement = [start/middle/end]
fault_placement = calendar

##################################################################################################
#
#               Indicates how Nans are handled
#
##################################################################################################

[Nan handling]
# the user my choose to remove nans
nan_removal = True

# the user may choose how he would like to handle the nan data
# drop will remove only the NaN and no other data, whereas remove will remove data according
# to the time frame specified
# data_replacement = drop/zero/first/last/none/average/max/remove
data_replacement = drop

# If more then the actual fault is removed the user can choose, how much data is removed
# removal_time_frame = [day/hour/all]
removal_time_frame = day

# If more then the actual fault is removed, the fault can be place in the middle, at the end or
# at the start of the data
# fault_placement = [start/middle/end]
fault_placement = calendar

##################################################################################################
#
#               Indicates how resampeling is handled
#
##################################################################################################

[Resample]
# the user my choose to resample the index
resampling = True

# desired time step of final df
resampling_step = 5

# unit of desired time step
# possible units are :
# H, hourly frequency
# T, min minutely frequency
# S secondly frequency
resampling_unit = min

# the user may choose how he would like to handle fill in upsampled data
# resampling_strategy_upsampling = first/last
resampling_strategy_upsampling = first

##################################################################################################
#
#               Data refill of NaN blocks
#
##################################################################################################

[Refill]
# the user my choose to refill data
data_refill = True

# The user may choose how many days they want to jump each iteration
days = 7

# The user may choose how often they would like to jump before giving up
attempts = 7

# the user my choose how many NaN's in a row are considered to be a block
# to simply refill individual NaN's see [Nan handling]
threshold = 5

# The user may choose that data is to be taken from the future
# forward_fill = False
forward_fill = True

# The user may choose that data is to be taken from the future
# backward_fill = True/False
backward_fill = True

[Optimiser Objective Set]
# Sets that hold information on which objective functions are used.
# A set can hold more then one objective. One of the following sets can be used:
# FinancialOptimisation = [ConnectionPointCost ThroughputCost EqualStorageActions]
# EnergyOptimisation = [ConnectionPointEnergy, GreedyGenerationCharging, GreedyDemandDischarging,
#                          Throughput, EqualStorageActions]
# PeakOptimisation = [ConnectionPointPeakPower]
# QuantisedPeakOptimisation = [ConnectionPointQuantisedPeak]
# DispatchOptimisation = [PiecewiseLinear] + FinancialOptimisation
# LocalModels = [LocalModelsCost, ThroughputCost, EqualStorageActions]
# LocalModelsThirdParty = [LocalThirdParty, ThroughputCost, EqualStorageActions]
# LocalPeakOptimisation = [OptimiserObjective.LocalGridPeakPower]

optimiserobjectiveset = FinancialOptimisation

[Optimiser Objectives]
# multiple objectives can be choose to create a new objective set.
ConnectionPointCost = True
ConnectionPointEnergy = True
ThroughputCost = True
Throughput = True
GreedyGenerationCharging = True
GreedyDemandDischarging = True
EqualStorageActions = True
ConnectionPointPeakPower = True
ConnectionPointQuantisedPeak = True
PiecewiseLinear = True
LocalModelsCost = True
LocalGridMinimiser = True
LocalThirdParty = True
LocalGridPeakPower = True

[Inverter]
# specifies values for the inverter

# Maximum rate (in units of power) at which the inverter can convert
charging_power_limit = 0.5

# Maximum rate (in units of power) at which the inverter can convert from DC to AC.
# Discharging power limit must not be positive
discharging_power_limit = 0.5

# Energy efficiency of conversion from AC to DC.
# Efficiency must be between 0.0 and 1.0 inclusive
charging_efficiency = 0.5

# Energy efficiency of conversion from DC to AC.
# Efficiency must be between 0.0 and 1.0 inclusive
discharging_efficiency = 0.5

# Maximum reactive power that can be generated/consumed while the inverter is charging.
# Charging power limit must not be negative
charging_reactive_power_limit = 0.5

#Maximum reactive power that can be generated/consumed  while the inverter is discharging.
discharging_reactive_power_limit = 0.5

# ToDo
reactive_charging_efficiency = 0.5

# Todo
reactive_discharging_efficiency = 0.5

[EnergyStorage]
# specifies values for the Energy Storage

# Maximum energy capacity of the system.
max_capacity= 0.5

# Proportion of energy reserved as a lower bound on the state of charge of the system at any
# given time.
# Depth of Discharge must be between 0.0 and 1.0 inclusive
depth_of_discharge_limit = 0.5

# Maximum rate at which the system can be charged
charging_power_limit = 0.5

# Maximum rate at which the system can be discharged
discharging_power_limit = 0.5

# Energy efficiency of conversion to stored energy.
# Efficiency must be between 0.0 and 1.0 inclusive
charging_efficiency = 0.5

# Energy efficiency of conversion from stored energy.
# Efficiency must be between 0.0 and 1.0 inclusive
discharging_efficiency = 0.5

# Cost to the system of the round trip conversion (both charging and discharging the system)
throughput_cost = 0.5

# Initial State of Charge of the storage system.
# Initial State of Charge must be between 0.0 and max_capacity
# should be None if not used. it will be set to the initial SoC to the minimum
# (inclusive of depth of discharge)
initial_state_of_charge = 0.5

[EnergySystem]
# specifies the components of the Energy System

# has an `EnergyStorage` system
energy_storage = True

# has an instance of `Inverter`
inverter = True

# has an instance of a `Generation` system
generation = True

# Whether the inverter/generation/storage system is configured in a hybrid setup
is_hybrid = False

[TariffFactors]
# scales the tariffs if nessecary. This can be used to create a 0.0 tariff  
lt_i_factor = 1
lt_e_factor = 1
rt_e_factor = 1
rt_i_factor = 1

[Scenario]
scenario_tag = '_2018_500kWh_n200_80pcsolar'
model_name = 'Network_profit'
optimisation_type = "LEM"
